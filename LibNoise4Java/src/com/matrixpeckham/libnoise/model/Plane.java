/*
 * DEFAULT LICENSE
 * Do not make illegal copies
 * This software is provided as is, without any warranty at all
 * Not responsible for any damage to anything that may occur
 * Copyright Â© 2012 William Peckham
 */
package com.matrixpeckham.libnoise.model;

import com.matrixpeckham.libnoise.module.Module;
import java.util.logging.Logger;

/**
 * Model that defines the surface of a plane.
 *
 * This model returns an output value from a noise module given the coordinates
 * of an input value located on the surface of an ( @a x,
 *
 * @a z ) plane.
 *
 * To generate an output value, pass the ( @a x, @a z ) coordinates of an input
 * value to the GetValue() method.
 *
 * This model is useful for creating: - two-dimensional textures - terrain
 * height maps for local areas
 *
 * This plane extends infinitely in both directions.
 */
public class Plane {

    private Module module = null;

    boolean useXY = false;

    /**
     * Getter
     *
     * @return
     */
    public Module getModule() {
        return module;
    }

    /**
     * Returns the output value from the noise module given the ( @a x, @a z )
     * coordinates of the specified input value located on the surface of the
     * plane.
     *
     * @param x The @a x coordinate of the input value.
     * @param z The @a z coordinate of the input value.
     *
     * @return The output value from the noise module.
     *
     * @noise.pre A noise module was passed to the SetModule() method.
     *
     * This output value is generated by the noise module passed to the
     * SetModule() method.
     */
    public double getValue(double x, double z) {
        if (!useXY) {
            return module.getValue(x, 0, z);
        } else {
            return module.getValue(x, z, 0);
        }
    }

    /**
     * Setter
     */
    public void useXY() {
        useXY = true;
    }

    /**
     * Setter
     *
     * @param module
     */
    public void setModule(Module module) {
        this.module = module;
    }

    private static final Logger LOG = Logger.getLogger(Plane.class.getName());

}
