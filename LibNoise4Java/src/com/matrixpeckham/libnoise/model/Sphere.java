/*
 * Copyright Â© 2017-2018 William Peckham
 *
 * This file is part of LibNoise4Java.
 * 
 * LibNoise4Java is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * LibNoise4Java is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with LibNoise4Java.  If not, see <http://www.gnu.org/licenses/>. 
 */

package com.matrixpeckham.libnoise.model;

import com.matrixpeckham.libnoise.module.Module;
import static com.matrixpeckham.libnoise.util.Globals.latLonToXYZ;
import com.matrixpeckham.libnoise.util.Vec3;
import java.util.logging.Logger;

/**
 * Model that defines the surface of a sphere.
 *
 * @image html modelsphere.png
 *
 * This model returns an output value from a noise module given the coordinates
 * of an input value located on the surface of a sphere.
 *
 * To generate an output value, pass the (latitude, longitude) coordinates of an
 * input value to the GetValue() method.
 *
 * This model is useful for creating: - seamless textures that can be mapped
 * onto a sphere - terrain height maps for entire planets
 *
 * This sphere has a radius of 1.0 unit and its center is located at the origin.
 */
public class Sphere {

    private Module module;

    /**
     * Constructor.
     */
    public Sphere() {
    }

    /**
     * Constructor
     *
     * @param m module to poll
     */
    public Sphere(Module m) {
        module = m;
    }

    /**
     * getter
     *
     * @return
     */
    public Module getModule() {
        return module;
    }

    /**
     * Returns the output value from the noise module given the (latitude,
     * longitude) coordinates of the specified input value located on the
     * surface of the sphere.
     *
     * @param lat The latitude of the input value, in degrees.
     * @param lon The longitude of the input value, in degrees.
     *
     * @return The output value from the noise module.
     *
     * @noise.pre A noise module was passed to the SetModule() method.
     *
     * This output value is generated by the noise module passed to the
     * SetModule() method.
     *
     * Use a negative latitude if the input value is located on the southern
     * hemisphere.
     *
     * Use a negative longitude if the input value is located on the western
     * hemisphere.
     */
    public double getValue(double lat, double lon) {
        Vec3 v = latLonToXYZ(lat, lon);
        return module.getValue(v.x, v.y, v.z);
    }

    /**
     * setter
     *
     * @param module
     */
    public void setModule(Module module) {
        this.module = module;
    }

    private static final Logger LOG = Logger.getLogger(Sphere.class.getName());

}
