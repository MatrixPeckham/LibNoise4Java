/*
 * DEFAULT LICENSE
 * Do not make illegal copies
 * This software is provided as is, without any warranty at all
 * Not responsible for any damage to anything that may occur
 * Copyright Â© 2012 William Peckham
 */
package com.matrixpeckham.libnoise.model;

import com.matrixpeckham.libnoise.module.Module;

/**
 * Model that defines the displacement of a line segment.
 *
 * This model returns an output value from a noise module given the
 * one-dimensional coordinate of an input value located on a line segment, which
 * can be used as displacements.
 *
 * This class is useful for creating:
 *
 * - roads and rivers
 *
 * - disaffected college students
 *
 * To generate an output value, pass an input value between 0.0 and 1.0 to the
 * GetValue() method. 0.0 represents the start position of the line segment and
 * 1.0 represents the end position of the line segment.
 *
 * @author William Matrix Peckham
 */
public class Line {

    /**
     * a flag that specifies whether the value is to be attenuated as the ends
     * of the line segment are approached.
     */
    private boolean attenuate;

    /**
     * a pointer to the noise module used to generate the output value
     */
    private Module module;

    /**
     * @a x coordinate of the start of the line segment.
     */
    private double x0;

    /**
     * @a x coordinate of the end of the line segment.
     */
    private double x1;

    /**
     * @a y coordinate of the start of the line segment.
     */
    private double y0;

    /**
     * @a y coordinate of the end of the line segment.
     */
    private double y1;

    /**
     * @a z coordinate of the start of the line segment.
     */
    private double z0;

    /**
     * @a z coordinate of the end of the line segment.
     */
    private double z1;

    public Line() {
        attenuate = true;
        x0 = 0;
        x1 = 1;
        y0 = 0;
        y1 = 1;
        z0 = 0;
        z1 = 1;
    }

    public Line(Module m) {
        this();
        module = m;
    }

    /**
     * Sets the position ( @a x, @a y, @a z ) of the start of the line segment
     * to choose values along.
     *
     * @param x x coordinate of the start position.
     * @param y y coordinate of the start position.
     * @param z z coordinate of the start position.
     */
    public void setStartPoint(double x, double y, double z) {
        x0 = x;
        y0 = y;
        z0 = z;
    }

    /**
     * Sets the noise module that is used to generate the output values.
     *
     * @param module The noise module that is used to generate the output
     * values.
     *
     * This noise module must exist for the lifetime of this object, until you
     * pass a new noise module to this method.
     */
    public void setModule(Module module) {
        this.module = module;
    }

    /**
     * Sets the position ( @a x, @a y, @a z ) of the end of the line segment to
     * choose values along.
     *
     * @param x x coordinate of the end position.
     * @param y y coordinate of the end position.
     * @param z z coordinate of the end position.
     */
    public void setEndPoint(double x, double y, double z) {
        x1 = x;
        y1 = y;
        z1 = z;
    }

    /**
     * Sets a flag indicating that the output value is to be attenuated (moved
     * toward 0.0) as the ends of the line segment are approached.
     *
     * @param att A flag that specifies whether the output value is to be
     * attenuated.
     */
    public void setAttenuate(boolean att) {
        this.attenuate = att;
    }

    /**
     * Returns a flag indicating whether the output value is to be attenuated
     * (moved toward 0.0) as the ends of the line segment are approached by the
     * input value.
     *
     * @returns
     *
     * - @a true if the value is to be attenuated
     *
     * - @a false if not.
     */
    public boolean getAttenuate() {
        return attenuate;
    }

    /**
     * Returns the output value from the noise module given the one-dimensional
     * coordinate of the specified input value located on the line segment.
     *
     * @param p The distance along the line segment (ranges from 0.0 to 1.0)
     *
     * @returns The output value from the noise module.
     *
     * @pre A noise module was passed to the SetModule() method.
     * @pre The start and end points of the line segment were specified.
     *
     * The output value is generated by the noise module passed to the
     * SetModule() method. This value may be attenuated (moved toward 0.0) as @a
     * p approaches either end of the line segment; this is the default
     * behavior.
     *
     * If the value is not to be attenuated, @a p can safely range outside the
     * 0.0 to 1.0 range; the output value will be extrapolated along the line
     * that this segment is part of.
     */
    public double getValue(double p) {
        double x = (x1 - x0) * p + x0;
        double y = (y1 - y0) * p + y0;
        double z = (z1 - z0) * p + z0;
        double value = module.getValue(x, y, z);

        if (attenuate) {
            return p * (1.0 - p) * 4 * value;
        } else {
            return value;
        }
    }

}
